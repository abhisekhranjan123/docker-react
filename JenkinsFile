pipeline {
  agent {
    label 'master'
  }
  tools {
    nodejs 'nodejs'
  }
  options {
    // This is required if you want to clean before build
    skipDefaultCheckout(true)
  }
  stages {
    stage('Clone SCM for sonar') {
      steps {
        // Clean before build
        cleanWs()
        git branch: 'master', 
        credentialsId: 'Handsek_GIT_Jenkins', 
        url: 'https://github.com/abhisekhranjan123/docker-react.git'
      }
    }
    stage('SonarQube analysis') {
      steps {
        script {
    
          withSonarQubeEnv('sonar') {
            sh "${tool("sonar")}/bin/sonar-scanner \
  -Dsonar.projectKey=reactjsproject \
  -Dsonar.sources=. \
  -Dsonar.host.url=http://13.233.56.169:9000 \
  -Dsonar.login=6a9f406d44edf8611af671e2179a2f6adf0d03c7"
          }
        }
      }
    }
    /*stage("Quality gate") {
      steps {
        script {
          def qualitygate = waitForQualityGate()
          sleep(10)
          if (qualitygate.status != "OK") {
            waitForQualityGate abortPipeline: true
          }
        }
      }
    }*/
    stage("Building Docker Image Of Application") 
        {
        steps{
                echo "The build number is ${env.BUILD_NUMBER}"
                echo "You can also use \${BUILD_NUMBER} -> ${BUILD_NUMBER}"
                sh 'echo "I can access $BUILD_NUMBER in shell command as well."'
                sh "docker build -t abhisekhranjan123/docker-react:${BUILD_NUMBER} ."
        }
        }
    
        stage("Docker Image Of Application Pushing to the DockerHub") {steps
        {
            withCredentials([string(credentialsId: 'Docker_Hub_Pwd', variable: 'Docker_Hub_Pwd')])
                {
                     sh "docker login -u abhisekhranjan123 -p ${Docker_Hub_Pwd}"
                }
             sh "docker push abhisekhranjan123/docker-react:${BUILD_NUMBER}"
        }
        }
           stage("Making Apllication Live On Web Server "){
           steps{
                 sshagent(['DOCKER_SERVER'])
                 {
                     sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.13.234 docker rm -f docker-react || true"
                     sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.13.234 docker run -d -p 80:80 --name docker-react abhisekhranjan123/docker-react:${BUILD_NUMBER}"
                }
           }

}
}
}
